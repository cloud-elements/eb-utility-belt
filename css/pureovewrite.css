:root {
  /* Setting variables color */
  --primary-color: rgb(77, 130, 191);
  --secondary-color: rgb(68, 200, 245);
  --tertiary-color: rgb(23, 35, 48);
  --text-color: rgb(51, 51, 51);
  --text-color-light: rgb(209, 209, 209);
  --white-color: white;
  --black-color: black;
  --line-color: rgb(209, 209, 209);
  --background-verylight: rgb(242, 242, 242);
  --background-light: rgb(225, 225, 225);
  --background-dark: rgb(50, 50, 50);
  --success-color: rgb(91, 189, 141);
  --danger-color: rgb(255, 78, 78);
  --warning-color: rgb(245, 181, 23);
}

body {
  min-width: 400px;
  padding: 0;
  margin: 0;
  min-height: 200px;
}

img {
    width: 22px;
    height: 22px;
    margin-right: 10px;
  }

th.tableHeaderClickable {
  cursor: pointer;
}

table.fixed-header tbody {
  display: block;
  overflow: auto;
  height: calc(100vh - 155px);
}

table.fixed-header tr {
  display: flex;
}

.printonly{
  display: none;
}

.tmpContainer {
  display: flex;
  flex-direction: row;
}

.header {
  border-bottom: 1px solid var(--line-color);
  padding: 0;
}

.title {
  background-color: var(--tertiary-color);
  padding: 10px;
  font-size: 14px;
  color: var(--white-color);
  margin: 0;
}

.title.with-navigation {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
}

.title-nav-button {
  background-color: transparent;
  background-image: none;
  font-size: 10px;
  margin: -5px 10px -5px -5px;
  border: 1px solid var(--white-color);
  color: var(--white-color);
  display: flex;
  align-items: center;
}

.title-nav-button span {
  display: none;
}

.title-nav-button:hover span{
  display: block;
  margin-left: 5px;
}

.toolbar,
.footer-group {
  display: flex;
  justify-content: flex-end;
  position: relative;
}

.toolbar.align-items-left {
  justify-content: flex-start;
}

.toolbar.align-items-right {
  justify-content: flex-end;
}

.subtoolbar {
  display: flex;
  position: relative;
  padding: 5px 12px;
  align-items: baseline;
}

.subtoolbar.align-items-spacebtw {
  justify-content: space-between;
}

.footer-group {
  flex-direction: row;
  align-items: stretch;
}
.footer-group button {
  flex: 1;
}

.errorText {
  flex: 1;
  color: var(--danger-color);
  letter-spacing: normal;
  text-align: center;
}

.pure-button-group .pure-button:hover {
  border-right: 1px solid rgba(0,0,0,.2) !important;
}
.pure-button-group .pure-button:last-child:hover {
  border-right: none !important;
}

/** Solid Button colors - The most importat actions in the interface
*** "button-primary" Use only for main interaction in the interface - it shoul only be one (like Highlander)
*** "button-secondary" Use only for the secondary action in the interface - could be more that ono but preferably not as solid color button
*** "button-success" For a positive actions like Test, Try it out, Accept, Procced
*** "button-error" For a negative actions like Delete or Cancel
*** "button-warning" For preventing actions like Procced with caution
**/

.button-success,
.button-error,
.button-warning,
.button-primary,
.button-secondary {
    color: var(--white-color);
    border-radius: 2px;
    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
}

.button-success .svg,
.button-error .svg,
.button-warning .svg,
.button-primary .svg
.button-secondary .svg {
  filter: invert(1);
  width: 16px;
  margin: 0px 0 -4px 0;
}

.button-primary {
  background: var(--primary-color);
}

.button-secondary {
  background: var(--secondary-color);
}

.button-success {
  background: var(--success-color);
}

.button-error {
  background: var(--danger-color);
}

.button-warning {
  background: var(--warning-color);
}

/** Inverted Button -
*** For less importat actions in teh interface
*** by using solid button classes like "button-secondary" + "button-inverted"
*** will invert the design to a text and border witht the seleted color
**/

.button-inverted {
  background: transparent;
  text-shadow: none;
  border: 1px solid var(--black-color);
}

.button-inverted:hover {
  background: #f9f9f9;
}

.button-inverted:focus {
  background-color: #f2f2f2;
  background-image: none;
}

.button-inverted.button-secondary {
  color: var(--secondary-color);
  border-color: var(--secondary-color);
}

/** Ghost Button -
*** For supportive actions in the interface - uses like toolbar action of "copy", "clear", "expand"
*** by using solid button classes like "button-secondary" + "button-ghost"
*** will set the style to a text only button
**/

.button-ghost{
  background-color: transparent;
  background-image: none;
  border: none;
  color: var(--text-color);
  text-shadow: none;
}

.button-ghost:hover{
  background-color: #f9f9f9;
  background-image: none;
  border: none;
}

.button-ghost.button-primary{
  color: var(--primary-color);
}

.button-ghost.button-secondary{
  color: var(--secondary-color);
}

.button-ghost.button-success{
  color: var(--success-color);
}

.button-ghost.button-error{
  color: var(--danger-color);
}

.button-ghost.button-warning{
  color: var(--warning-color);
}

/** In Table Row Action Button -
*** For row actions like delete, go to, link etc
**/

.row-action{
  background-color: transparent;
  background-image: none;
  border: none;
  color: var(--text-color);
  text-shadow: none;
  opacity: .3;
  border-radius: 0;
}

.row-action:hover{
  background-color: var(--secondary-color);
  color: var(--white-color);
  background-image: none;
  border: none;
  opacity: 1;
}



/** Set different sizes of the buttons
*** MORE INFO AND USAGE TO COME
**/

.button-large {
    font-size: 130%;
}

.button-small {
    font-size: 80%;
}


.list-navigation .pure-menu-link {
  font-size: 16px;
  padding: 12px;
}

.itemWrapper {
  border: 1px solid grey;
  border-radius: 4px;
  /* padding: 5px; */
  margin-bottom: 10px;
  display: flex;
  flex-direction: column;
}

.requestHeader {
  background-color: lightgray;
  display: flex;
  flex-direction: row;
  justify-content: stretch;
  /* height: 24px; */
  padding: 4px;
  align-items: center;
}

.metaInfo {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.params {
  display: flex;
  flex-direction: column;
  flex: 1;
}

.headers {
  display: flex;
  flex-direction: column;
  flex: 2;
}

h4 {
  color: var(--tertiary-color);
  margin-top: 8px;
  margin-bottom: 8px;
  text-decoration: underline;
}

pre.rawBody {
  white-space: pre;
  word-wrap: normal;
  max-height: 200px;
  background-color: var(--background-verylight);
  margin-bottom: 0px;
  border-top: var(--background-verylight);
  border-top-width: 1px;
}

.requestUrl {
  flex: 1;
  overflow: auto;
  margin-right: 5px;
}

.deleteRequestButton {
  margin-left: 20px;
  background-color: var(--danger-color);
  color: white;
}

.requestBody {
  display: flex;
  flex-direction: column;
  padding: 8px;
}

.requestLists {
  display: flex;
  flex-direction: column;
  align-content: space-between;
  padding: 4px;
}

.pure-menu-link i.fa {
  float: right;
}

.pure-form {
  padding: 12px;
  display: flex;
  flex-direction: column;
}

.output-textfield {
  margin: 10px 0;
}

.output-textfield .toolbar {
  background-color: var(--background-dark);
  justify-content: space-between;
}

.output-textfield .toolbar p {
  margin: 5px;
  letter-spacing: normal;
  color: var(--text-color-light);
}

.output-textfield .toolbar button{
  opacity: .4;
  background-color: transparent;
  color: var(--white-color);
}

.output-textfield .toolbar button:hover {
  opacity: 1;
  background-color: var(--secondary-color);
}

.output-textfield textarea,
.output-textfield textarea[readonly] {
  border: none !important;
  background-color: var(--background-dark);
  margin: 0 !important;
  width: 100%;
  border-radius: 0;
  color: var(--white-color);
  box-shadow: none;
}

.output-textfield pre,
.output-textfield pre[readonly] {
  border: none !important;
  background-color: var(--background-dark);
  padding-left: 5px;
  margin: 0 !important;
  min-width: 95%;
  max-width: 100%;
  border-radius: 0;
  color: var(--white-color);
  box-shadow: none;
  height: 78px;
  resize: both;
  overflow: auto;
}

.pure-form-stacked input[type=password] {
  margin-bottom: 10px;
}

.input-textfield {
  margin: 10px 0;
}

.input-textfield .toolbar {
  background-color: var(--background-light);
  justify-content: space-between;
}

.input-textfield .toolbar p {
  margin: 5px;
  letter-spacing: normal;
  color: var(--text-color);
}

.input-textfield .toolbar button{
  opacity: .4;
  background-color: transparent;
  color: var(--black-color);
}

.input-textfield .toolbar button:hover {
  opacity: 1;
  background-color: var(--secondary-color);
}

.input-textfield textarea,
.input-textfield textarea[readonly] {
  border: none !important;
  background-color: var(--background-light);
  margin: 0 !important;
  width: 100%;
  border-radius: 0;
  color: var(--black-color);
  box-shadow: none;
}

.toolbar.searchBar {
  display: initial;
}

.toolbar.searchBar form {
  align-items: center;
  flex: 1;
  flex-direction: row;
}

.toolbar.searchBar form * {
  flex: 1;
  margin-right: 10px;
}

.toolbar.searchBar form *:last-child {
  margin-right: 0;
}

.toolbar.searchBar form label, .toolbar.searchBar form .pure-button {
  width: max-content;
  flex: unset;
}

.count {
  letter-spacing: 1px;
}

.small-text {
  font-size: 15px;
  color: var(--secondary-color);
  position: absolute;
  left: 10px;
  top: 5px;
  display: block;
  letter-spacing: normal
}

.fade-small-text {
  animation-name: faded;
  animation-delay: .25s;
  animation-duration: 8s;
  animation-timing-function: ease-in;
  font-size: 15px;
  opacity: 0;
  color: var(--secondary-color);
  position: absolute;
  left: 10px;
  top: 5px;
  display: block;
  letter-spacing: normal
}
.table-wrapper {
  width: 100vw;
  overflow-x: auto;
  height: calc(100vh - 116px);
  overflow-y: hidden;
}

/* Set width for columns in metadataTable Table, use class names generated in render (same as header)*/
body.matadataTable {
  overflow: hidden;
}
#metadataTable {width: 100vw}
#metadataTable th {
  text-transform: capitalize;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
#metadataTable th.id,
#metadataTable td.id {width: 70px}

#metadataTable th.hub,
#metadataTable td.hub {width: 140px}

#metadataTable th.name,
#metadataTable td.name {width: 220px;}

#metadataTable th.key,
#metadataTable td.key {width: 170px;}

#metadataTable th.element_type,
#metadataTable td.element_type {width: 85px}

#metadataTable th.authentication_type,
#metadataTable td.authentication_type {width: 125px}

#metadataTable th.api_type,
#metadataTable td.api_type {width: 70px}

#metadataTable th.beta,
#metadataTable td.beta {width: 70px}

#metadataTable th.events,
#metadataTable td.events {width: 55px}

#metadataTable th.bulk_upload,
#metadataTable td.bulk_upload {width: 75px}

#metadataTable th.bulk_download,
#metadataTable td.bulk_download {width: 95px}

#metadataTable th.notes,
#metadataTable td.notes {flex: 1.5; min-width: 150px}

#metadataTable th.details {width: 48px;}
#metadataTable td.details {width: 57px; padding: 0;}

#metadataTable tr:hover td a.row-action {
  background-color: var(--secondary-color);
  color: var(--white-color);
  background-image: none;
  border: none;
  opacity: 1;
}

.filteredby {
  padding: 0 5px;
  display: flex;
}

.filteredby .queryName {
  background-color: var(--background-verylight);
  color: var(--text-color);
  padding: 5px;
  border: 1px solid var(--text-color);
  border-radius: 5px;
  margin-left: 5px;
}

.filteredby .queryTerm {
  font-weight: bold;
}

footer {
  position: fixed;
  right: 20px;
  bottom: 0px;
  text-align: end;
  opacity: .50;
}

@keyframes faded {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.loader {
  border: 16px solid var(--line-color);
  border-top: 16px solid var(--primary-color); /* Blue */
  border-radius: 50%;
  width: 60px;
  height: 60px;
  animation: spin 2s linear infinite;
}

.loaderHolder {
  position: absolute;
  top: 50%;
  left: 50%;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
